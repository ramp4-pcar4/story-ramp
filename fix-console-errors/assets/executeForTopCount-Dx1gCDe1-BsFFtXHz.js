import{y as i}from"./utils-9sQxfkoa-B_xJURyJ.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-qEmKD5or.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DnJU90yz.js";import"./story-DNO1V2Cc.js";import"./main-Blv5uOGZ.js";import"./normalizeUtils-Bxmy9MNI-B11EtOmK.js";import"./normalizeUtilsCommon-CRJlkfEA-CKRGa03o.js";import"./utils-Bq23Xwmj-DhJ0PDFb.js";import"./query-DFW9-NG_-VNGOk2fX.js";import"./pbfQueryUtils-F4ZE8-K8-DKVMNZyT.js";import"./pbf-D-y3_eZO-DpMhd50X.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-msGSQOBK.js";import"./projection-BA9M1R7d-0lOSCD2G.js";import"./projectBuffer-CvCBvJ6W-Uq_UByar.js";import"./TimeExtent-Cn0Jofqr-BYuaG3Wo.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
