import{y as i}from"./utils-9sQxfkoa-D7--SQOT.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DAfNZsCn.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Bx371QbA.js";import"./story-DSn7G2jT.js";import"./main-DJmelbpF.js";import"./normalizeUtils-Bxmy9MNI-Bpx_2R-6.js";import"./normalizeUtilsCommon-CRJlkfEA-hPGn03Ge.js";import"./utils-Bq23Xwmj-DTvLu7GC.js";import"./query-DFW9-NG_-Ci7FOXHi.js";import"./pbfQueryUtils-F4ZE8-K8-BC0ShDI4.js";import"./pbf-D-y3_eZO-Bu4TtipP.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-Bi3JizVw.js";import"./projection-BA9M1R7d-majzGa6H.js";import"./projectBuffer-CvCBvJ6W-CL44c06l.js";import"./TimeExtent-Cn0Jofqr-CCvNi57Y.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
