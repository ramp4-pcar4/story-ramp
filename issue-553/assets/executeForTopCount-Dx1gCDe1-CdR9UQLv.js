import{y as i}from"./utils-9sQxfkoa-CWFHr6EE.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DT9OVvF9.js";import a from"./TopFeaturesQuery-Ckj_IYM7-0fF1h2mU.js";import"./story-CdGEWm4Q.js";import"./main-sLM32nEv.js";import"./normalizeUtils-Bxmy9MNI-CVBwXYTC.js";import"./normalizeUtilsCommon-CRJlkfEA-ol_If6S6.js";import"./utils-Bq23Xwmj-BIQ4jUGC.js";import"./query-DFW9-NG_-Bq1yIdCf.js";import"./pbfQueryUtils-F4ZE8-K8-Cw_5Q38Z.js";import"./pbf-D-y3_eZO-DZhgpWjV.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-C7G8GpMv.js";import"./projection-BA9M1R7d-C1F8lLEV.js";import"./projectBuffer-CvCBvJ6W-oqpTh530.js";import"./TimeExtent-Cn0Jofqr-5Gga6SLP.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
