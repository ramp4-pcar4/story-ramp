import{y as i}from"./utils-9sQxfkoa-CKvQGbsc.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DVRL_ow2.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Db_c933o.js";import"./story-BIbAQURG.js";import"./main-BvuIN3Uw.js";import"./normalizeUtils-Bxmy9MNI-CRI10nOw.js";import"./normalizeUtilsCommon-CRJlkfEA-CIgjQg4c.js";import"./utils-Bq23Xwmj-C4tvOCWM.js";import"./query-DFW9-NG_-uKsPPr4e.js";import"./pbfQueryUtils-F4ZE8-K8-ses_u6nx.js";import"./pbf-D-y3_eZO-DLkx93Lz.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-Dpj7BXg4.js";import"./projection-BA9M1R7d-BaplzFWz.js";import"./projectBuffer-CvCBvJ6W-tjq3YIlD.js";import"./TimeExtent-Cn0Jofqr-CrV3gzRG.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
