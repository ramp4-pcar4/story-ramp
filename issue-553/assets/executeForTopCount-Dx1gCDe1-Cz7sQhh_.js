import{y as i}from"./utils-9sQxfkoa-kpGKu6hK.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-BAAu7jPi.js";import a from"./TopFeaturesQuery-Ckj_IYM7-uYKpI6wK.js";import"./story-C8cpA3MP.js";import"./main-CgC6dfHJ.js";import"./normalizeUtils-Bxmy9MNI-BmDVD4XE.js";import"./normalizeUtilsCommon-CRJlkfEA-DVNeKhLG.js";import"./utils-Bq23Xwmj-Dcc6ABfR.js";import"./query-DFW9-NG_-D5i8fZLk.js";import"./pbfQueryUtils-F4ZE8-K8-C_bwiZQP.js";import"./pbf-D-y3_eZO-1BAJ0czi.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DMp7Vs1o.js";import"./projection-BA9M1R7d-BozbZHi_.js";import"./projectBuffer-CvCBvJ6W-dwkIRT6X.js";import"./TimeExtent-Cn0Jofqr-BjbTneXY.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
