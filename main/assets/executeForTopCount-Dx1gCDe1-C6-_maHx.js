import{y as i}from"./utils-9sQxfkoa-I4uMz38F.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-CxKNMMZy.js";import a from"./TopFeaturesQuery-Ckj_IYM7-B6RTATHM.js";import"./story-C04-1Ne3.js";import"./main-exdXun_t.js";import"./normalizeUtils-Bxmy9MNI-BJBtdSHM.js";import"./normalizeUtilsCommon-CRJlkfEA-Q5ggJ2sd.js";import"./utils-Bq23Xwmj-C7MJqsRk.js";import"./query-DFW9-NG_-y6Uv8B1c.js";import"./pbfQueryUtils-F4ZE8-K8-BSzrdtV_.js";import"./pbf-D-y3_eZO-DeBDefcT.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DKZ6IFyL.js";import"./projection-BA9M1R7d-BR0LRhZ-.js";import"./projectBuffer-CvCBvJ6W-Cut1JCLk.js";import"./TimeExtent-Cn0Jofqr-BIVSM6zj.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
