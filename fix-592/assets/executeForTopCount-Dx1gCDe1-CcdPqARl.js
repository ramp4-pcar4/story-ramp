import{y as i}from"./utils-9sQxfkoa-BmFUwRAe.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-8id9uJhx.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BgUNXlVB.js";import"./story-Jlplq0sN.js";import"./main-Cv0bYCFD.js";import"./normalizeUtils-Bxmy9MNI-CQWkaaLp.js";import"./normalizeUtilsCommon-CRJlkfEA-vlddtU0u.js";import"./utils-Bq23Xwmj-BHaGFo_Z.js";import"./query-DFW9-NG_-xIbvc7QQ.js";import"./pbfQueryUtils-F4ZE8-K8-B9u8kYHK.js";import"./pbf-D-y3_eZO-ChYLkQt5.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BeJ-JJNs.js";import"./projection-BA9M1R7d-K4LiKzXX.js";import"./projectBuffer-CvCBvJ6W-CK7kb898.js";import"./TimeExtent-Cn0Jofqr-WFvQEVcy.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
