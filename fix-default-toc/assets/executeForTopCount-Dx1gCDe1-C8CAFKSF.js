import{y as i}from"./utils-9sQxfkoa-iTX9JGaN.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Dl0eKLsi.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DdST7c_P.js";import"./story-DsQpnM2M.js";import"./main-CmLXDgNR.js";import"./normalizeUtils-Bxmy9MNI-CpT334Rj.js";import"./normalizeUtilsCommon-CRJlkfEA-T0bYy5Uu.js";import"./utils-Bq23Xwmj-Bs06B2Tf.js";import"./query-DFW9-NG_-BTZH2X0Y.js";import"./pbfQueryUtils-F4ZE8-K8-CIBVwntO.js";import"./pbf-D-y3_eZO-CindThN2.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-C_YipPBm.js";import"./projection-BA9M1R7d-eNI-pIWt.js";import"./projectBuffer-CvCBvJ6W-CjXLl9vK.js";import"./TimeExtent-Cn0Jofqr-BSLzoyNA.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
