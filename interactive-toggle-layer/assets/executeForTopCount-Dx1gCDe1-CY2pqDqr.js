import{y as i}from"./utils-9sQxfkoa-DQSLw7Pa.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-0cxS51TG.js";import a from"./TopFeaturesQuery-Ckj_IYM7-C9RDWtbX.js";import"./story-OWO1toEx.js";import"./main-Cp6FG-iA.js";import"./normalizeUtils-Bxmy9MNI-BQqaAqXk.js";import"./normalizeUtilsCommon-CRJlkfEA-C8fnSlfw.js";import"./utils-Bq23Xwmj-ayLC1AfK.js";import"./query-DFW9-NG_-c5HFR_up.js";import"./pbfQueryUtils-F4ZE8-K8-Df3Ffd3W.js";import"./pbf-D-y3_eZO-CM09GNm7.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-yPmTNswQ.js";import"./projection-BA9M1R7d-C5weT4We.js";import"./projectBuffer-CvCBvJ6W-DrUyDECL.js";import"./TimeExtent-Cn0Jofqr-COXge9ax.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
