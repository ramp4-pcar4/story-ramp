import{y as i}from"./utils-9sQxfkoa-t3FiQmzC.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DadEZ3QR.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DTEUFO3I.js";import"./story-bM9Av9j6.js";import"./main-DtwznpoF.js";import"./normalizeUtils-Bxmy9MNI-v26Z5Ts6.js";import"./normalizeUtilsCommon-CRJlkfEA-RyyYnD34.js";import"./utils-Bq23Xwmj-D-KFrqf3.js";import"./query-DFW9-NG_-ThYJzURW.js";import"./pbfQueryUtils-F4ZE8-K8-B9r9j2f9.js";import"./pbf-D-y3_eZO-BTKl1Wq9.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BFyQYhme.js";import"./projection-BA9M1R7d-DkJYwxpv.js";import"./projectBuffer-CvCBvJ6W-B9g6U4bh.js";import"./TimeExtent-Cn0Jofqr-D5g9ReTS.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
