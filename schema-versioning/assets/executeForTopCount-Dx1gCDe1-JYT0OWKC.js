import{y as i}from"./utils-9sQxfkoa-BHsg9s5l.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Bzj5L6MU.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Dk8ORVFz.js";import"./story-B9xumwLI.js";import"./main-BtP7c6vW.js";import"./normalizeUtils-Bxmy9MNI-B1v54_Bu.js";import"./normalizeUtilsCommon-CRJlkfEA-CMf8Gut4.js";import"./utils-Bq23Xwmj-6AleoKWv.js";import"./query-DFW9-NG_-avK70x88.js";import"./pbfQueryUtils-F4ZE8-K8-CX5bJAuq.js";import"./pbf-D-y3_eZO-Cw1qfCZL.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-D5A58oFg.js";import"./projection-BA9M1R7d-CK-kkTrr.js";import"./projectBuffer-CvCBvJ6W-wbw8juri.js";import"./TimeExtent-Cn0Jofqr-Djstchdc.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
