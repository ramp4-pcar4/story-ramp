import{y as i}from"./utils-9sQxfkoa-_Ls9giaj.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-B0djQyVZ.js";import a from"./TopFeaturesQuery-Ckj_IYM7-AOCsoIga.js";import"./story-CDfgDVlQ.js";import"./main-CrfaO6B1.js";import"./normalizeUtils-Bxmy9MNI-DXVun1qX.js";import"./normalizeUtilsCommon-CRJlkfEA-Dze2nOST.js";import"./utils-Bq23Xwmj-C5k7PftI.js";import"./query-DFW9-NG_-SQj1r47q.js";import"./pbfQueryUtils-F4ZE8-K8-BnEo8seg.js";import"./pbf-D-y3_eZO-D-FXQhYS.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CTRLzLML.js";import"./projection-BA9M1R7d-BkuCUZf0.js";import"./projectBuffer-CvCBvJ6W-Qk1KkxuE.js";import"./TimeExtent-Cn0Jofqr-D5AMVOne.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
