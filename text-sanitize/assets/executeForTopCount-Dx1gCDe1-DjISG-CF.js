import{y as i}from"./utils-9sQxfkoa-Uj79OHQo.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Cy1sgdGY.js";import a from"./TopFeaturesQuery-Ckj_IYM7-CJj2wB1S.js";import"./story-BY83lkjv.js";import"./main-DRqgYPdm.js";import"./normalizeUtils-Bxmy9MNI-5eSWk6Nk.js";import"./normalizeUtilsCommon-CRJlkfEA-CmsZGKNa.js";import"./utils-Bq23Xwmj-COIIrmkx.js";import"./query-DFW9-NG_-BU2-McgG.js";import"./pbfQueryUtils-F4ZE8-K8-BkXtHZV6.js";import"./pbf-D-y3_eZO-CqFywIbs.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-vVy-wdMq.js";import"./projection-BA9M1R7d-DLhYlVBq.js";import"./projectBuffer-CvCBvJ6W-CTZaftSt.js";import"./TimeExtent-Cn0Jofqr-BDfbbLSA.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
