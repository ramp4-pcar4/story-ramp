import{y as i}from"./utils-9sQxfkoa-D7_XKsuU.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DjuxyTRR.js";import a from"./TopFeaturesQuery-Ckj_IYM7-CJqEOk-_.js";import"./story-Xo1RHV7m.js";import"./main-C1peHdn-.js";import"./normalizeUtils-Bxmy9MNI-KPorBkTL.js";import"./normalizeUtilsCommon-CRJlkfEA-CMC0MAKW.js";import"./utils-Bq23Xwmj-B8QIyXke.js";import"./query-DFW9-NG_-MV9CkTKy.js";import"./pbfQueryUtils-F4ZE8-K8-yLNNn_zH.js";import"./pbf-D-y3_eZO-baW6oZxa.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DvsDjpPh.js";import"./projection-BA9M1R7d-CMQYBZxb.js";import"./projectBuffer-CvCBvJ6W-CjBkGALS.js";import"./TimeExtent-Cn0Jofqr-DIXc8Xd3.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
