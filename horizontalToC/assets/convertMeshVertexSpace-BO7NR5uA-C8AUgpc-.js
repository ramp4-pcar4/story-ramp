import{$ as m,o as s,P as p}from"./story-DaEyY0Z8.js";import{o as n}from"./MeshVertexAttributes-CbNpPur2-B8wsUJxv.js";import{b as c}from"./vertexSpaceConversion-CiKaVq_u-BA8TAHK7.js";import"./main-CHJ5XDDB.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-DX7gBViE-BxVxI4Ks.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./vec32-D9GsKZ1t-CvoQTk9o.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-C-f4Pa0y.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-Ca-aR5jL.js";import"./projectBuffer-CvCBvJ6W-DjreM3FE.js";import"./projectPointToVector-B2UUY9SE-Di1cBcWP.js";import"./projection-BA9M1R7d-BDC5yOLu.js";import"./meshVertexSpaceUtils-B4l_Zo0M-DW2lDqtQ.js";import"./MeshLocalVertexSpace-BqgocsoS-JiHXg4iC.js";import"./vec3-BazNroeq-B_M5F_Rn.js";import"./BufferView-PQoE3GL7-D-wWAvmX.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DWDdg1fj-BLUecs2R.js";async function k(o,r,t){await Promise.resolve(),m(t);const i=c(o,r,{useEllipsoid:t?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=o.cloneAndModifyVertexAttributes(new n({...i,uv:p(o.vertexAttributes.uv),color:p(o.vertexAttributes.color)}),r);return e.transform=null,e}export{k as convertMeshVertexSpace};
