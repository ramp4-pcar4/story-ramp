import{y as i}from"./utils-9sQxfkoa-B5rPzsX-.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Dk8omZ8E.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BmpfqtCI.js";import"./story-CY1ZQpQb.js";import"./main-7tnoG3Jw.js";import"./normalizeUtils-Bxmy9MNI-BD_RGMiz.js";import"./normalizeUtilsCommon-CRJlkfEA-DcRkdibT.js";import"./utils-Bq23Xwmj-C8Zebo9Z.js";import"./query-DFW9-NG_-CQrEsGH6.js";import"./pbfQueryUtils-F4ZE8-K8-zVL34hQ2.js";import"./pbf-D-y3_eZO-B1TQcfG-.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CfWY2XC4.js";import"./projection-BA9M1R7d-DTEPjd2K.js";import"./projectBuffer-CvCBvJ6W-eY_GOubO.js";import"./TimeExtent-Cn0Jofqr-CZ-1du1i.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
